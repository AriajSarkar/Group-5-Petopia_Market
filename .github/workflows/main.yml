name: Petopia Market # Name of the workflow

on: # Define when the workflow should be triggered
  push: # Trigger the workflow on push events to the specified branches
    branches:
      - main
      - dev
  pull_request: # Trigger the workflow on pull requests targeting the specified branches
    branches:
      - dev

jobs:
  run-unit-tests:
    runs-on: ubuntu-latest # Define the operating system for the job
    strategy:
      matrix: # Define a matrix for running tests with different configurations
        node-version: [20.x] # Define Node.js versions to test with
        mongodb-version: ["6.0"] # Define MongoDB versions to test with

    steps:
      - name: Checkout code # Step to checkout the repository code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }} # Step to set up Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start MongoDB # Step to start MongoDB service
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-replica-set: test-rs
          mongodb-port: 27017

      - name: Install backend dependencies # Step to install backend dependencies
        run: |
          cd Backend
          npm install

      - name: Run backend tests # Step to run backend tests
        env:
          ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }} # Secret for access token
          REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }} # Secret for refresh token
          ACCESS_TOKEN_EXPIRY: 2d # Expiry time for access token
          REFRESH_TOKEN_EXPIRY: 15d # Expiry time for refresh token
        run: |
          cd Backend
          npm run test

  deploy-to-render:
    runs-on: ubuntu-latest
    needs: [run-unit-tests]
    if: ${{ needs.run-unit-tests.result == 'success' }}
    steps:
      - name: Trigger deployment webhook
        run: curl -X POST -d '{}' ${{ secrets.RENDER_DEPLOYMENT_WEBHOOK_URL }}

  send-notification-to-discord:
    runs-on: ubuntu-latest
    needs: [run-unit-tests]
    if: ${{ always() }} # Always run this job
    steps:
      - name: Notify Discord
        if: ${{ needs.run-unit-tests.result != null }} # Check if any tests were run
        uses: rjstone/discord-webhook-notify@v1
        with:
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          severity: ${{ needs.run-unit-tests.result == 'success' ? 'info' : 'error' }} # Set severity based on test result
          details: |
            ${{ if(needs.run-unit-tests.result == 'success', 'New Deployment Successfully Done!', 'Deployment Failed!') }}
